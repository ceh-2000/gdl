[*] Run ID 0: seed=0, split_index=0
    Starting now: 2024-02-20 01:16:39.174799
[*] Loaded dataset 'HCPGender' from 'PyG-NeuroGraphDataset':
  Data(x=[1078000, 1000], edge_index=[2, 49133748], y=[1078])
  undirected: True
  num graphs: 1078
  avg num_nodes/graph: 1000
  num node features: 1000
  num edge features: 1
  num classes: 2
Parsed RWSE PE kernel times / steps: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
Precomputing Positional Encoding statistics: ['RWSE'] for all graphs...
  ...estimated to be undirected: True
Done! Took 00:01:14.06
GraphGymModule(
  (model): GPSModel(
    (encoder): FeatureEncoder(
      (node_encoder): RWSENodeEncoder(
        (linear_x): Linear(in_features=1000, out_features=48, bias=True)
        (raw_norm): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (pe_encoder): Linear(in_features=16, out_features=16, bias=True)
      )
      (edge_encoder): LinearEdgeEncoder(
        (encoder): Linear(in_features=1, out_features=64, bias=True)
      )
    )
    (layers): Sequential(
      (0): GPSLayer(
        summary: dim_h=64, local_gnn_type=CustomGatedGCN, global_model_type=Transformer, heads=4
        (local_model): GatedGCNLayer()
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
        )
        (norm1_local): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (norm1_attn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dropout_local): Dropout(p=0.0, inplace=False)
        (dropout_attn): Dropout(p=0.0, inplace=False)
        (ff_linear1): Linear(in_features=64, out_features=128, bias=True)
        (ff_linear2): Linear(in_features=128, out_features=64, bias=True)
        (norm2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (ff_dropout1): Dropout(p=0.0, inplace=False)
        (ff_dropout2): Dropout(p=0.0, inplace=False)
      )
      (1): GPSLayer(
        summary: dim_h=64, local_gnn_type=CustomGatedGCN, global_model_type=Transformer, heads=4
        (local_model): GatedGCNLayer()
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
        )
        (norm1_local): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (norm1_attn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dropout_local): Dropout(p=0.0, inplace=False)
        (dropout_attn): Dropout(p=0.0, inplace=False)
        (ff_linear1): Linear(in_features=64, out_features=128, bias=True)
        (ff_linear2): Linear(in_features=128, out_features=64, bias=True)
        (norm2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (ff_dropout1): Dropout(p=0.0, inplace=False)
        (ff_dropout2): Dropout(p=0.0, inplace=False)
      )
      (2): GPSLayer(
        summary: dim_h=64, local_gnn_type=CustomGatedGCN, global_model_type=Transformer, heads=4
        (local_model): GatedGCNLayer()
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
        )
        (norm1_local): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (norm1_attn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (dropout_local): Dropout(p=0.0, inplace=False)
        (dropout_attn): Dropout(p=0.0, inplace=False)
        (ff_linear1): Linear(in_features=64, out_features=128, bias=True)
        (ff_linear2): Linear(in_features=128, out_features=64, bias=True)
        (norm2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (ff_dropout1): Dropout(p=0.0, inplace=False)
        (ff_dropout2): Dropout(p=0.0, inplace=False)
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): GeneralMultiLayer(
            (Layer_0): GeneralLayer(
              (layer): Linear(
                (model): Linear(64, 64, bias=True)
              )
              (post_layer): Sequential(
                (0): ReLU()
              )
            )
          )
          (1): Linear(
            (model): Linear(64, 1, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: True
  edge_encoder_bn: False
  edge_encoder_name: LinearEdge
  edge_encoder_num_types: 0
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: PyG-NeuroGraphDataset
  infer_link_label: None
  label_column: none
  label_table: none
  location: local
  name: HCPGender
  node_encoder: True
  node_encoder_bn: False
  node_encoder_name: RWSE
  node_encoder_num_types: 0
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  slic_compactness: 10
  split: [0.8, 0.1, 0.1]
  split_dir: ./splits
  split_index: 0
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
devices: 1
example_arg: example
example_group:
  example_arg: example
gnn:
  act: relu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: False
  clear_feature: True
  dim_edge: 64
  dim_inner: 64
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: generalconv
  layers_mp: 2
  layers_post_mp: 2
  layers_pre_mp: 0
  msg_direction: single
  normalize_adj: False
  residual: False
  self_msg: concat
  skip_every: 1
  stage_type: stack
gpu_mem: False
graphormer:
  attention_dropout: 0.0
  dropout: 0.0
  embed_dim: 80
  input_dropout: 0.0
  mlp_dropout: 0.0
  num_heads: 4
  num_layers: 6
  use_graph_token: True
gt:
  activation: relu
  attn_dropout: 0.5
  batch_norm: True
  bigbird:
    add_cross_attention: False
    attention_type: block_sparse
    block_size: 3
    chunk_size_feed_forward: 0
    hidden_act: relu
    is_decoder: False
    layer_norm_eps: 1e-06
    max_position_embeddings: 128
    num_random_blocks: 3
    use_bias: False
  dim_edge: None
  dim_hidden: 64
  dropout: 0.0
  full_graph: True
  gamma: 1e-05
  layer_norm: False
  layer_type: CustomGatedGCN+Transformer
  layers: 3
  n_heads: 4
  pna_degrees: []
  residual: True
  secondary_edges: full_graph
mem:
  inplace: False
metric_agg: argmax
metric_best: accuracy
model:
  edge_decoding: dot
  graph_pooling: mean
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: GPSModel
name_tag: 
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.001
  batch_accumulation: 1
  clip_grad_norm: True
  clip_grad_norm_value: 1.0
  lr_decay: 0.1
  max_epoch: 7
  min_lr: 0.0
  momentum: 0.9
  num_warmup_epochs: 5
  optimizer: adamW
  reduce_factor: 0.1
  schedule_patience: 10
  scheduler: cosine_with_warmup
  steps: [30, 60, 90]
  weight_decay: 1e-05
out_dir: results\neural-GPS+RWSE+small
posenc_ERE:
  accuracy: 0.1
  dim_pe: 16
  enable: False
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: none
posenc_ERN:
  accuracy: 0.1
  dim_pe: 16
  enable: False
  er_dim: none
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: none
posenc_ElstaticSE:
  dim_pe: 16
  enable: False
  kernel:
    times: []
    times_func: range(10)
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: none
posenc_EquivStableLapPE:
  eigen:
    eigvec_norm: L2
    laplacian_norm: sym
    max_freqs: 10
  enable: False
  raw_norm_type: none
posenc_GraphormerBias:
  dim_pe: 0
  enable: False
  node_degrees_only: False
  num_in_degrees: None
  num_out_degrees: None
  num_spatial_types: None
posenc_HKdiagSE:
  dim_pe: 16
  enable: False
  kernel:
    times: []
    times_func: 
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: none
posenc_LapPE:
  dim_pe: 16
  eigen:
    eigvec_norm: L2
    laplacian_norm: sym
    max_freqs: 10
  enable: False
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: none
posenc_RWSE:
  dim_pe: 16
  enable: True
  kernel:
    times: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
    times_func: range(1,17)
  layers: 3
  model: Linear
  n_heads: 4
  pass_as_var: False
  post_layers: 0
  raw_norm_type: BatchNorm
posenc_SignNet:
  dim_pe: 16
  eigen:
    eigvec_norm: L2
    laplacian_norm: sym
    max_freqs: 10
  enable: False
  layers: 3
  model: none
  n_heads: 4
  pass_as_var: False
  phi_hidden_dim: 64
  phi_out_dim: 4
  post_layers: 0
  raw_norm_type: none
prep:
  add_edge_index: True
  add_reverse_edges: True
  add_self_loops: False
  dist_cutoff: 510
  dist_enable: False
  exp: False
  exp_algorithm: Random-d
  exp_count: 1
  exp_deg: 5
  exp_max_num_iters: 100
  layer_edge_indices_dir: None
  num_virt_node: 0
  train_percent: 0.6
  use_exp_edges: True
pretrained:
  dir: 
  freeze_main: False
  reset_prediction_head: True
print: both
round: 5
run_dir: results\neural-GPS+RWSE+small\0
run_id: 0
run_multiple_splits: []
seed: 0
share:
  dim_in: 1000
  dim_out: 2
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: True
train:
  auto_resume: False
  batch_size: 16
  ckpt_best: False
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  mode: custom
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
wandb:
  entity: gtransformers
  name: 
  project: neural
  use: False
Num parameters: 216673
Start from epoch 0
train: {'epoch': 0, 'time_epoch': 193.68348, 'eta': 1162.10088, 'eta_hours': 0.32281, 'loss': 0.69307512, 'lr': 0.0, 'params': 216673, 'time_iter': 3.58673, 'accuracy': 0.48608, 'precision': 0.44495, 'recall': 0.49114, 'f1': 0.46691, 'auc': 0.50626}
...computing epoch stats took: 0.03s
val: {'epoch': 0, 'time_epoch': 22.43204, 'loss': 0.69427239, 'lr': 0, 'params': 216673, 'time_iter': 3.20458, 'accuracy': 0.47222, 'precision': 0.44118, 'recall': 0.61224, 'f1': 0.51282, 'auc': 0.46558}
...computing epoch stats took: 0.02s
test: {'epoch': 0, 'time_epoch': 33.68996, 'loss': 0.69229361, 'lr': 0, 'params': 216673, 'time_iter': 4.81285, 'accuracy': 0.48148, 'precision': 0.4507, 'recall': 0.65306, 'f1': 0.53333, 'auc': 0.52992}
...computing epoch stats took: 0.02s
> Epoch 0: took 249.9s (avg 249.9s) | Best so far: epoch 0	train_loss: 0.6931 train_accuracy: 0.4861	val_loss: 0.6943 val_accuracy: 0.4722	test_loss: 0.6923 test_accuracy: 0.4815
train: {'epoch': 1, 'time_epoch': 204.54957, 'eta': 995.58262, 'eta_hours': 0.27655, 'loss': 0.67567771, 'lr': 0.0002, 'params': 216673, 'time_iter': 3.78796, 'accuracy': 0.60441, 'precision': 0.57377, 'recall': 0.53165, 'f1': 0.55191, 'auc': 0.63498}
...computing epoch stats took: 0.01s
val: {'epoch': 1, 'time_epoch': 20.32647, 'loss': 0.66266449, 'lr': 0, 'params': 216673, 'time_iter': 2.90378, 'accuracy': 0.62963, 'precision': 0.62857, 'recall': 0.44898, 'f1': 0.52381, 'auc': 0.70979}
...computing epoch stats took: 0.01s
test: {'epoch': 1, 'time_epoch': 33.65385, 'loss': 0.65762654, 'lr': 0, 'params': 216673, 'time_iter': 4.80769, 'accuracy': 0.67593, 'precision': 0.65909, 'recall': 0.59184, 'f1': 0.62366, 'auc': 0.74161}
...computing epoch stats took: 0.01s
> Epoch 1: took 258.6s (avg 254.2s) | Best so far: epoch 1	train_loss: 0.6757 train_accuracy: 0.6044	val_loss: 0.6627 val_accuracy: 0.6296	test_loss: 0.6576 test_accuracy: 0.6759
train: {'epoch': 2, 'time_epoch': 159.26363, 'eta': 743.3289, 'eta_hours': 0.20648, 'loss': 0.64321276, 'lr': 0.0004, 'params': 216673, 'time_iter': 2.94933, 'accuracy': 0.70998, 'precision': 0.70655, 'recall': 0.62785, 'f1': 0.66488, 'auc': 0.76475}
...computing epoch stats took: 0.01s
val: {'epoch': 2, 'time_epoch': 20.31562, 'loss': 0.61691505, 'lr': 0, 'params': 216673, 'time_iter': 2.90223, 'accuracy': 0.74074, 'precision': 0.81818, 'recall': 0.55102, 'f1': 0.65854, 'auc': 0.88309}
...computing epoch stats took: 0.01s
test: {'epoch': 2, 'time_epoch': 33.71961, 'loss': 0.61047048, 'lr': 0, 'params': 216673, 'time_iter': 4.81709, 'accuracy': 0.7963, 'precision': 0.90909, 'recall': 0.61224, 'f1': 0.73171, 'auc': 0.89623}
...computing epoch stats took: 0.01s
> Epoch 2: took 213.3s (avg 240.6s) | Best so far: epoch 2	train_loss: 0.6432 train_accuracy: 0.7100	val_loss: 0.6169 val_accuracy: 0.7407	test_loss: 0.6105 test_accuracy: 0.7963
train: {'epoch': 3, 'time_epoch': 272.39914, 'eta': 622.42187, 'eta_hours': 0.17289, 'loss': 0.59623193, 'lr': 0.0006, 'params': 216673, 'time_iter': 5.04443, 'accuracy': 0.77378, 'precision': 0.78409, 'recall': 0.69873, 'f1': 0.73896, 'auc': 0.80702}
val: {'epoch': 3, 'time_epoch': 20.27256, 'loss': 0.63936875, 'lr': 0, 'params': 216673, 'time_iter': 2.89608, 'accuracy': 0.63889, 'precision': 0.56098, 'recall': 0.93878, 'f1': 0.70229, 'auc': 0.86735}
test: {'epoch': 3, 'time_epoch': 33.64648, 'loss': 0.63376593, 'lr': 0, 'params': 216673, 'time_iter': 4.80664, 'accuracy': 0.65741, 'precision': 0.575, 'recall': 0.93878, 'f1': 0.71318, 'auc': 0.84469}
> Epoch 3: took 326.4s (avg 262.0s) | Best so far: epoch 2	train_loss: 0.6432 train_accuracy: 0.7100	val_loss: 0.6169 val_accuracy: 0.7407	test_loss: 0.6105 test_accuracy: 0.7963
train: {'epoch': 4, 'time_epoch': 254.34253, 'eta': 433.69534, 'eta_hours': 0.12047, 'loss': 0.55058702, 'lr': 0.0008, 'params': 216673, 'time_iter': 4.71005, 'accuracy': 0.79118, 'precision': 0.78215, 'recall': 0.75443, 'f1': 0.76804, 'auc': 0.85828}
val: {'epoch': 4, 'time_epoch': 20.28368, 'loss': 0.73189626, 'lr': 0, 'params': 216673, 'time_iter': 2.89767, 'accuracy': 0.5, 'precision': 0.47573, 'recall': 1.0, 'f1': 0.64474, 'auc': 0.82947}
test: {'epoch': 4, 'time_epoch': 33.69745, 'loss': 0.7307535, 'lr': 0, 'params': 216673, 'time_iter': 4.81392, 'accuracy': 0.5, 'precision': 0.47525, 'recall': 0.97959, 'f1': 0.64, 'auc': 0.79661}
> Epoch 4: took 308.4s (avg 271.3s) | Best so far: epoch 2	train_loss: 0.6432 train_accuracy: 0.7100	val_loss: 0.6169 val_accuracy: 0.7407	test_loss: 0.6105 test_accuracy: 0.7963
train: {'epoch': 5, 'time_epoch': 192.06255, 'eta': 212.71682, 'eta_hours': 0.05909, 'loss': 0.51945035, 'lr': 0.001, 'params': 216673, 'time_iter': 3.55671, 'accuracy': 0.81206, 'precision': 0.81572, 'recall': 0.76203, 'f1': 0.78796, 'auc': 0.83796}
val: {'epoch': 5, 'time_epoch': 20.36112, 'loss': 0.78788772, 'lr': 0, 'params': 216673, 'time_iter': 2.90873, 'accuracy': 0.46296, 'precision': 0.45794, 'recall': 1.0, 'f1': 0.62821, 'auc': 0.68938}
test: {'epoch': 5, 'time_epoch': 33.70228, 'loss': 0.78360438, 'lr': 0, 'params': 216673, 'time_iter': 4.81461, 'accuracy': 0.47222, 'precision': 0.46226, 'recall': 1.0, 'f1': 0.63226, 'auc': 0.68385}
> Epoch 5: took 246.2s (avg 267.1s) | Best so far: epoch 2	train_loss: 0.6432 train_accuracy: 0.7100	val_loss: 0.6169 val_accuracy: 0.7407	test_loss: 0.6105 test_accuracy: 0.7963
train: {'epoch': 6, 'time_epoch': 320.17899, 'eta': 0.0, 'eta_hours': 0.0, 'loss': 0.45274956, 'lr': 0.0005, 'params': 216673, 'time_iter': 5.92924, 'accuracy': 0.86311, 'precision': 0.85422, 'recall': 0.84557, 'f1': 0.84987, 'auc': 0.91038}
val: {'epoch': 6, 'time_epoch': 20.26701, 'loss': 0.59974209, 'lr': 0, 'params': 216673, 'time_iter': 2.89529, 'accuracy': 0.7037, 'precision': 1.0, 'recall': 0.34694, 'f1': 0.51515, 'auc': 0.8478}
test: {'epoch': 6, 'time_epoch': 33.67022, 'loss': 0.62287429, 'lr': 0, 'params': 216673, 'time_iter': 4.81003, 'accuracy': 0.67593, 'precision': 0.85, 'recall': 0.34694, 'f1': 0.49275, 'auc': 0.81909}
> Epoch 6: took 374.1s (avg 282.4s) | Best so far: epoch 2	train_loss: 0.6432 train_accuracy: 0.7100	val_loss: 0.6169 val_accuracy: 0.7407	test_loss: 0.6105 test_accuracy: 0.7963
Avg time per epoch: 282.40s
Total train loop time: 0.55h
Task done, results saved in results\neural-GPS+RWSE+small\0
Results aggregated across runs saved in results\neural-GPS+RWSE+small\agg
[*] All done: 2024-02-20 01:51:00.602573
